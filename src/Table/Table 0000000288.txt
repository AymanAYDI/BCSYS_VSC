OBJECT Table 288 Vendor Bank Account
{
  OBJECT-PROPERTIES
  {
    Date=30/04/15;
    Time=20:00:00;
    Modified=Yes;
    Version List=NAVW18.00,NAVFR8.00,JX-VSC1.2-XAD-LAB,JX-VSC2.0-AUD;
  }
  PROPERTIES
  {
    DataCaptionFields=Vendor No.,Code,Name;
    OnModify=BEGIN

               //DEBUT MODIF JX-XAD 19/05/2010
               IF ("Bank Branch No." <> xRec."Bank Branch No.") OR ("Agency Code" <> xRec."Agency Code") OR
                  ("Bank Account No." <> xRec."Bank Account No.") OR ("RIB Key" <> xRec."RIB Key") OR
                  ("SWIFT Code" <> xRec."SWIFT Code") OR (IBAN <> xRec.IBAN) THEN
                    "Change RIB/IBAN" := TODAY;
               //FIN MODIF JX-XAD 19/05/2010

               //Modif JX-AUD du 27/04/2011
               IF(Grec_Vendor.GET("Vendor No.")) THEN
               BEGIN
                 IF((Code = '1') AND ((Grec_Vendor."Default Bank Account Code" = '1') OR (Grec_Vendor."Default Bank Account Code" = '')))  THEN
                 BEGIN
                  Grec_Vendor.VALIDATE("Default Bank Account Code",'1');
                  Grec_Vendor.MODIFY;
                 END;
               END;
               //Fin modif JX-AUd du 27/04/2011
             END;

    CaptionML=[ENU=Vendor Bank Account;
               FRA=Compte bancaire fournisseur];
    LookupPageID=Page426;
    DrillDownPageID=Page426;
  }
  FIELDS
  {
    { 1   ;   ;Vendor No.          ;Code20        ;TableRelation=Vendor;
                                                   CaptionML=[ENU=Vendor No.;
                                                              FRA=Nø fournisseur];
                                                   NotBlank=Yes }
    { 2   ;   ;Code                ;Code10        ;CaptionML=[ENU=Code;
                                                              FRA=Code];
                                                   NotBlank=Yes }
    { 3   ;   ;Name                ;Text50        ;CaptionML=[ENU=Name;
                                                              FRA=Nom] }
    { 5   ;   ;Name 2              ;Text50        ;CaptionML=[ENU=Name 2;
                                                              FRA=Nom 2] }
    { 6   ;   ;Address             ;Text50        ;CaptionML=[ENU=Address;
                                                              FRA=Adresse] }
    { 7   ;   ;Address 2           ;Text50        ;CaptionML=[ENU=Address 2;
                                                              FRA=Adresse (2Šme ligne)] }
    { 8   ;   ;City                ;Text30        ;TableRelation=IF (Country/Region Code=CONST()) "Post Code".City
                                                                 ELSE IF (Country/Region Code=FILTER(<>'')) "Post Code".City WHERE (Country/Region Code=FIELD(Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidateCity(City,"Post Code",County,"Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=City;
                                                              FRA=Ville] }
    { 9   ;   ;Post Code           ;Code20        ;TableRelation=IF (Country/Region Code=CONST()) "Post Code"
                                                                 ELSE IF (Country/Region Code=FILTER(<>'')) "Post Code" WHERE (Country/Region Code=FIELD(Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidatePostCode(City,"Post Code",County,"Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Post Code;
                                                              FRA=Code postal] }
    { 10  ;   ;Contact             ;Text50        ;CaptionML=[ENU=Contact;
                                                              FRA=Contact] }
    { 11  ;   ;Phone No.           ;Text30        ;ExtendedDatatype=Phone No.;
                                                   CaptionML=[ENU=Phone No.;
                                                              FRA=Nø t‚l‚phone] }
    { 12  ;   ;Telex No.           ;Text20        ;CaptionML=[ENU=Telex No.;
                                                              FRA=Nø t‚lex] }
    { 13  ;   ;Bank Branch No.     ;Text20        ;OnValidate=BEGIN
                                                                "RIB Checked" := RIBKey.Check("Bank Branch No.","Agency Code","Bank Account No.","RIB Key");
                                                              END;

                                                   CaptionML=[ENU=Bank Branch No.;
                                                              FRA=Code ‚tablissement] }
    { 14  ;   ;Bank Account No.    ;Text30        ;OnValidate=BEGIN
                                                                "RIB Checked" := RIBKey.Check("Bank Branch No.","Agency Code","Bank Account No.","RIB Key");
                                                              END;

                                                   CaptionML=[ENU=Bank Account No.;
                                                              FRA=Nø compte bancaire] }
    { 15  ;   ;Transit No.         ;Text20        ;CaptionML=[ENU=Transit No.;
                                                              FRA=Nø interne] }
    { 16  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   CaptionML=[ENU=Currency Code;
                                                              FRA=Code devise] }
    { 17  ;   ;Country/Region Code ;Code10        ;TableRelation=Country/Region;
                                                   CaptionML=[ENU=Country/Region Code;
                                                              FRA=Code pays/r‚gion] }
    { 18  ;   ;County              ;Text30        ;CaptionML=[ENU=County;
                                                              FRA=R‚gion] }
    { 19  ;   ;Fax No.             ;Text30        ;CaptionML=[ENU=Fax No.;
                                                              FRA=Nø t‚l‚copie] }
    { 20  ;   ;Telex Answer Back   ;Text20        ;CaptionML=[ENU=Telex Answer Back;
                                                              FRA=T‚lex retour] }
    { 21  ;   ;Language Code       ;Code10        ;TableRelation=Language;
                                                   CaptionML=[ENU=Language Code;
                                                              FRA=Code langue] }
    { 22  ;   ;E-Mail              ;Text80        ;ExtendedDatatype=E-Mail;
                                                   CaptionML=[ENU=E-Mail;
                                                              FRA=E-mail] }
    { 23  ;   ;Home Page           ;Text80        ;ExtendedDatatype=URL;
                                                   CaptionML=[ENU=Home Page;
                                                              FRA=Page d'accueil] }
    { 24  ;   ;IBAN                ;Code50        ;OnValidate=VAR
                                                                CompanyInfo@1000 : Record 79;
                                                              BEGIN
                                                                CompanyInfo.CheckIBAN(IBAN);
                                                              END;

                                                   CaptionML=[ENU=IBAN;
                                                              FRA=IBAN] }
    { 25  ;   ;SWIFT Code          ;Code20        ;CaptionML=[ENU=SWIFT Code;
                                                              FRA=Code SWIFT] }
    { 1211;   ;Bank Clearing Code  ;Text50        ;CaptionML=[ENU=Bank Clearing Code;
                                                              FRA=Code compensation bancaire] }
    { 1212;   ;Bank Clearing Standard;Text50      ;TableRelation="Bank Clearing Standard";
                                                   CaptionML=[ENU=Bank Clearing Standard;
                                                              FRA=Standard compensation bancaire] }
    { 10851;  ;Agency Code         ;Text5         ;InitValue=00000;
                                                   OnValidate=BEGIN
                                                                IF STRLEN("Agency Code") < 5 THEN
                                                                  "Agency Code" := PADSTR('',5 - STRLEN("Agency Code"),'0') + "Agency Code";
                                                                "RIB Checked" := RIBKey.Check("Bank Branch No.","Agency Code","Bank Account No.","RIB Key");
                                                              END;

                                                   CaptionML=[ENU=Agency Code;
                                                              FRA=Code agence] }
    { 10852;  ;RIB Key             ;Integer       ;OnValidate=BEGIN
                                                                "RIB Checked" := RIBKey.Check("Bank Branch No.","Agency Code","Bank Account No.","RIB Key");
                                                              END;

                                                   CaptionML=[ENU=RIB Key;
                                                              FRA=Cl‚ RIB] }
    { 10853;  ;RIB Checked         ;Boolean       ;CaptionML=[ENU=RIB Checked;
                                                              FRA=V‚rification RIB];
                                                   Editable=No }
    { 50000;  ;Change RIB/IBAN     ;Date          ;CaptionML=[ENU=Change RIB/IBAN;
                                                              FRA=Modification du RIB/IBAN];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Vendor No.,Code                         ;Clustered=Yes }
    {    ;Code                                     }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;Code,Name                                }
  }
  CODE
  {
    VAR
      PostCode@1000 : Record 225;
      RIBKey@1120000 : Codeunit 10801;
      BankAccIdentifierIsEmptyErr@1001 : TextConst 'ENU=You must specify either a Bank Account No. or an IBAN.;FRA=Vous devez sp‚cifier un nø compte bancaire ou un IBAN.';
      Grec_Vendor@1000000000 : Record 23;

    PROCEDURE GetBankAccountNoWithCheck@14() AccountNo : Text;
    BEGIN
      AccountNo := GetBankAccountNo;
      IF AccountNo = '' THEN
        ERROR(BankAccIdentifierIsEmptyErr);
    END;

    PROCEDURE GetBankAccountNo@1() : Text;
    BEGIN
      IF IBAN <> '' THEN
        EXIT(DELCHR(IBAN,'=<>'));

      IF "Bank Account No." <> '' THEN
        EXIT("Bank Account No.");
    END;

    BEGIN
    {

      -------------------------------------- V1.2 --------------------------------------

      DEBUT MODIF JX-XAD 19/05/2010
      Ajout du champ "Modification du RIB" qui doit contenir la date de modification du RIB ou IBAN

      //modif LAB du 26/05/2010
      //remplacement label champ modification RIB en modification RIB/IBAN
      //champ mis en non ‚ditable

      //Modif JX-AUD du 27/04/2011
      //Ajout de code pour le champ Code m‚thode OnValidate
    }
    END.
  }
}

