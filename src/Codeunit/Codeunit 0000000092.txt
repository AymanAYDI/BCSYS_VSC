OBJECT Codeunit 92 Purch.-Post + Print
{
  OBJECT-PROPERTIES
  {
    Date=06/07/15;
    Time=16:00:00;
    Modified=Yes;
    Version List=NAVW17.00,JX-VSC1.0-XAD,JX-VSC1.2-XAD;
  }
  PROPERTIES
  {
    TableNo=38;
    Permissions=TableData 480=rimd,
                TableData 481=rimd;
    OnRun=BEGIN
            PurchHeader.COPY(Rec);
            Code;
            Rec := PurchHeader;
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=&Receive,&Invoice,Receive &and Invoice;FRA=&R‚ceptionner,&Facturer,R‚ceptionner &et facturer';
      Text001@1001 : TextConst 'ENU=Do you want to post and print the %1?;FRA=Souhaitez-vous valider et imprimer le document %1 ?';
      Text002@1002 : TextConst 'ENU=&Ship,&Invoice,Ship &and Invoice;FRA=&Livrer,&Facturer,Livrer &et facturer';
      PurchHeader@1003 : Record 38;
      PurchRcptHeader@1004 : Record 120;
      PurchInvHeader@1005 : Record 122;
      PurchCrMemoHeader@1006 : Record 124;
      PurchShptHeader@1007 : Record 6650;
      ReportSelection@1008 : Record 77;
      Selection@1010 : Integer;
      Text003@1000000000 : TextConst 'ENU=Do you want this document to confirm receipt?;FRA=Souhaitez-vous valider ce document en r‚ception ?';

    LOCAL PROCEDURE Code@2();
    VAR
      PurchSetup@1000 : Record 312;
      PurchasePostViaJobQueue@1001 : Codeunit 98;
      Lrec_PurchLine@1000000005 : Record 39;
      Lint_Compteur@1000000004 : Integer;
      Lrec_Dimension@1000000002 : Record 348;
      Lrec_DimensionValue@1000000001 : Record 349;
      Lcode_AxeReserve@1000000000 : Code[10];
      Lcu_Dimension@1000000007 : Codeunit 408;
      LCode_DimCode@1000000006 : ARRAY [50] OF Code[20];
      LCode_DimValueCode@1000000003 : ARRAY [50] OF Code[20];
    BEGIN
      WITH PurchHeader DO BEGIN
        CASE "Document Type" OF
          "Document Type"::Order:
            BEGIN

            //D‚but modif JX-XAD du 12/06/2008
            //La validation d'une commande ne doit se faire qu'en r‚ception, et non en facturation.
              {
              Selection := STRMENU(Text000,3);
              IF Selection = 0 THEN
                EXIT;
              Receive := Selection IN [1,3];
              Invoice := Selection IN [2,3];
              }
            IF CONFIRM(Text003) THEN
            BEGIN
              Receive := TRUE;
              Invoice := FALSE;
            END ELSE
              EXIT;
            //Fin modif JX-XAD du 12/06/2008

            END;
          "Document Type"::"Return Order":
            BEGIN
              Selection := STRMENU(Text002,3);
              IF Selection = 0 THEN
                EXIT;
              Ship := Selection IN [1,3];
              Invoice := Selection IN [2,3];
            END
          ELSE
            IF NOT
               CONFIRM(
                 Text001,FALSE,
                 "Document Type")
            THEN
              EXIT;
        END;
        "Print Posted Documents" := TRUE;

        //DEBUT MODIF JX XAD 12/05/2010 (traitement modification analytique manuelle post validation)
        Lcode_AxeReserve := 'RESERVE';
        IF Lrec_Dimension.GET(Lcode_AxeReserve) THEN
        BEGIN
          // On initialise, si n‚cessaire, les sections de l'axe analytique 'RESERVE'
          IF NOT Lrec_DimensionValue.GET(Lcode_AxeReserve,'100') THEN
          BEGIN
            FOR Lint_Compteur := 1 TO 100 DO
            BEGIN
              IF NOT Lrec_DimensionValue.GET(Lcode_AxeReserve,FORMAT(Lint_Compteur)) THEN
              BEGIN
                Lrec_DimensionValue.INIT;
                Lrec_DimensionValue.VALIDATE(Lrec_DimensionValue."Dimension Code",Lcode_AxeReserve);
                Lrec_DimensionValue.VALIDATE(Lrec_DimensionValue.Code,FORMAT(Lint_Compteur));
                Lrec_DimensionValue.INSERT;
              END;
            END;
          END;
          // Traitement de l'axe analytique 'RESERVE' pour chaque ligne du document
          IF ("Document Type" IN ["Document Type"::Invoice,"Document Type"::"Credit Memo"]) THEN
          BEGIN
            Lrec_PurchLine.RESET;
            Lrec_PurchLine.SETFILTER(Lrec_PurchLine."Document Type",'%1',"Document Type");
            Lrec_PurchLine.SETFILTER(Lrec_PurchLine."Document No.",'%1',"No.");
            Lrec_PurchLine.SETFILTER(Lrec_PurchLine.Type,'<>%1',Lrec_PurchLine.Type::" ");
            Lrec_PurchLine.SETFILTER(Lrec_PurchLine."No.",'<>%1','');
            Lint_Compteur := 0;
            IF Lrec_PurchLine.FIND('-') THEN
            REPEAT
              Lint_Compteur += 1;
              LCode_DimCode[1] := Lcode_AxeReserve;
              LCode_DimValueCode[1] := FORMAT(Lint_Compteur);
              Lrec_PurchLine."Dimension Set ID" := Lcu_Dimension.SetNewDimIDSpec(Lrec_PurchLine."Dimension Set ID",Lrec_PurchLine."Shortcut Dimension 1 Code",
                                            Lrec_PurchLine."Shortcut Dimension 2 Code",LCode_DimCode,LCode_DimValueCode);
              Lrec_PurchLine.MODIFY;
            UNTIL Lrec_PurchLine.NEXT = 0;
          END;
        END;
        //FIN MODIF JX XAD 12/05/2010 (traitement modification analytique manuelle post validation)

        PurchSetup.GET;
        IF PurchSetup."Post & Print with Job Queue" THEN
          PurchasePostViaJobQueue.EnqueuePurchDoc(PurchHeader)
        ELSE BEGIN
          CODEUNIT.RUN(CODEUNIT::"Purch.-Post",PurchHeader);
          GetReport(PurchHeader);
        END;
      END;
    END;

    PROCEDURE GetReport@3(VAR PurchHeader@1000 : Record 38);
    BEGIN
      WITH PurchHeader DO
        CASE "Document Type" OF
          "Document Type"::Order:
            BEGIN
              IF Receive THEN BEGIN
                PurchRcptHeader."No." := "Last Receiving No.";
                PurchRcptHeader.SETRECFILTER;
                PrintReport(ReportSelection.Usage::"P.Receipt");
              END;
              IF Invoice THEN BEGIN
                PurchInvHeader."No." := "Last Posting No.";
                PurchInvHeader.SETRECFILTER;
                PrintReport(ReportSelection.Usage::"P.Invoice");
              END;
            END;
          "Document Type"::Invoice:
            BEGIN
              IF "Last Posting No." = '' THEN
                PurchInvHeader."No." := "No."
              ELSE
                PurchInvHeader."No." := "Last Posting No.";
              PurchInvHeader.SETRECFILTER;
              PrintReport(ReportSelection.Usage::"P.Invoice");
            END;
          "Document Type"::"Return Order":
            BEGIN
              IF Ship THEN BEGIN
                PurchShptHeader."No." := "Last Return Shipment No.";
                PurchShptHeader.SETRECFILTER;
                PrintReport(ReportSelection.Usage::"P.Ret.Shpt.");
              END;
              IF Invoice THEN BEGIN
                PurchCrMemoHeader."No." := "Last Posting No.";
                PurchCrMemoHeader.SETRECFILTER;
                PrintReport(ReportSelection.Usage::"P.Cr.Memo");
              END;
            END;
          "Document Type"::"Credit Memo":
            BEGIN
              IF "Last Posting No." = '' THEN
                PurchCrMemoHeader."No." := "No."
              ELSE
                PurchCrMemoHeader."No." := "Last Posting No.";
              PurchCrMemoHeader.SETRECFILTER;
              PrintReport(ReportSelection.Usage::"P.Cr.Memo");
            END;
        END;
    END;

    LOCAL PROCEDURE PrintReport@1(ReportUsage@1000 : Integer);
    BEGIN
      ReportSelection.RESET;
      ReportSelection.SETRANGE(Usage,ReportUsage);
      ReportSelection.FINDSET;
      REPEAT
        ReportSelection.TESTFIELD("Report ID");
        CASE ReportUsage OF
          ReportSelection.Usage::"P.Invoice":
            REPORT.RUN(ReportSelection."Report ID",FALSE,FALSE,PurchInvHeader);
          ReportSelection.Usage::"P.Cr.Memo":
            REPORT.RUN(ReportSelection."Report ID",FALSE,FALSE,PurchCrMemoHeader);
          ReportSelection.Usage::"P.Receipt":
            REPORT.RUN(ReportSelection."Report ID",FALSE,FALSE,PurchRcptHeader);
          ReportSelection.Usage::"P.Ret.Shpt.":
            REPORT.RUN(ReportSelection."Report ID",FALSE,FALSE,PurchShptHeader);
        END;
      UNTIL ReportSelection.NEXT = 0;
    END;

    BEGIN
    {

      //D‚but modif JX-XAD du 12/06/2008
      //La validation d'une commande ne doit se faire qu'en r‚ception, et non en facturation.

      MODIF JX XAD 12/05/2010
      Traitement de l'axe analytique 'RESERVE' li‚ … la modification analytique manuelle post validation
      Initialisation de cet axe avec les sections
    }
    END.
  }
}

