OBJECT Report 297 Batch Post Sales Invoices
{
  OBJECT-PROPERTIES
  {
    Date=16/03/16;
    Time=16:23:41;
    Modified=Yes;
    Version List=NAVW18.00,JX-VSC2.0-AUD;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Batch Post Sales Invoices;
               FRA=TPL valider factures vente];
    ProcessingOnly=Yes;
  }
  DATASET
  {
    { 6640;    ;DataItem;                    ;
               DataItemTable=Table36;
               DataItemTableView=SORTING(Document Type,No.)
                                 WHERE(Document Type=CONST(Invoice));
               ReqFilterHeadingML=[ENU=Sales Invoice;
                                   FRA=Facture vente];
               OnPreDataItem=BEGIN
                               IF ReplacePostingDate AND (PostingDateReq = 0D) THEN
                                 ERROR(Text000);

                               ApprovalTemplate.SETCURRENTKEY("Table ID","Document Type",Enabled);
                               ApprovalTemplate.SETRANGE("Table ID",DATABASE::"Sales Header");
                               ApprovalTemplate.SETRANGE("Document Type","Document Type"::Invoice);
                               ApprovalTemplate.SETRANGE(Enabled,TRUE);
                               IF ApprovalTemplate.FINDFIRST THEN
                                 SETRANGE(Status,Status::Released);

                               CounterTotal := COUNT;
                               Window.OPEN(Text001);
                             END;

               OnAfterGetRecord=VAR
                                  Lrec_SalesLine@1000000007 : Record 37;
                                  Lint_Compteur@1000000006 : Integer;
                                  Lrec_Dimension@1000000005 : Record 348;
                                  Lrec_DimensionValue@1000000004 : Record 349;
                                  Lcode_AxeReserve@1000000003 : Code[10];
                                  Lcu_Dimension@1000000002 : Codeunit 408;
                                  LCode_DimCode@1000000001 : ARRAY [50] OF Code[20];
                                  LCode_DimValueCode@1000000000 : ARRAY [50] OF Code[20];
                                BEGIN
                                  IF CalcInvDisc THEN
                                    CalculateInvoiceDiscount;

                                  Counter := Counter + 1;
                                  Window.UPDATE(1,"No.");
                                  Window.UPDATE(2,ROUND(Counter / CounterTotal * 10000,1));

                                  //DEBUT MODIF JX XAD 16/03/2011 (traitement modification analytique manuelle post validation)
                                  Lcode_AxeReserve := 'RESERVE';
                                  IF Lrec_Dimension.GET(Lcode_AxeReserve) THEN
                                  BEGIN
                                    // On initialise, si n‚cessaire, les sections de l'axe analytique 'RESERVE'
                                    IF NOT Lrec_DimensionValue.GET(Lcode_AxeReserve,'100') THEN
                                    BEGIN
                                      FOR Lint_Compteur := 1 TO 100 DO
                                      BEGIN
                                        IF NOT Lrec_DimensionValue.GET(Lcode_AxeReserve,FORMAT(Lint_Compteur)) THEN
                                        BEGIN
                                          Lrec_DimensionValue.INIT;
                                          Lrec_DimensionValue.VALIDATE(Lrec_DimensionValue."Dimension Code",Lcode_AxeReserve);
                                          Lrec_DimensionValue.VALIDATE(Lrec_DimensionValue.Code,FORMAT(Lint_Compteur));
                                          Lrec_DimensionValue.INSERT;
                                        END;
                                      END;
                                    END;
                                    // Traitement de l'axe analytique 'RESERVE' pour chaque ligne du document
                                    IF ("Document Type" IN ["Document Type"::Invoice,"Document Type"::"Credit Memo", "Document Type"::Order]) THEN
                                    BEGIN
                                      Lrec_SalesLine.RESET;
                                      Lrec_SalesLine.SETFILTER(Lrec_SalesLine."Document Type",'%1',"Document Type");
                                      Lrec_SalesLine.SETFILTER(Lrec_SalesLine."Document No.",'%1',"No.");
                                      Lrec_SalesLine.SETFILTER(Lrec_SalesLine.Type,'<>%1',Lrec_SalesLine.Type::" ");
                                      Lrec_SalesLine.SETFILTER(Lrec_SalesLine."No.",'<>%1','');
                                      Lint_Compteur := 0;
                                      IF Lrec_SalesLine.FIND('-') THEN
                                      REPEAT
                                        Lint_Compteur += 1;
                                        LCode_DimCode[1] := Lcode_AxeReserve;
                                        LCode_DimValueCode[1] := FORMAT(Lint_Compteur);
                                        Lrec_SalesLine."Dimension Set ID" := Lcu_Dimension.SetNewDimIDSpec(Lrec_SalesLine."Dimension Set ID",Lrec_SalesLine."Shortcut Dimension 1 Code",
                                                                      Lrec_SalesLine."Shortcut Dimension 2 Code",LCode_DimCode,LCode_DimValueCode);
                                        Lrec_SalesLine.MODIFY;
                                      UNTIL Lrec_SalesLine.NEXT = 0;
                                      COMMIT;
                                    END;
                                  END;
                                  //FIN MODIF JX XAD 16/03/2011 (traitement modification analytique manuelle post validation)

                                  CLEAR(SalesPost);
                                  SalesPost.SetPostingDate(ReplacePostingDate,ReplaceDocumentDate,PostingDateReq);
                                  IF SalesPost.RUN("Sales Header") THEN BEGIN
                                    CounterOK := CounterOK + 1;
                                    IF MARKEDONLY THEN
                                      MARK(FALSE);
                                  END;
                                END;

               OnPostDataItem=BEGIN
                                Window.CLOSE;
                                MESSAGE(Text002,CounterOK,CounterTotal);
                              END;

               ReqFilterFields=No.,Status }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   SalesSetup.GET;
                   CalcInvDisc := SalesSetup."Calc. Inv. Discount";
                   ReplacePostingDate := FALSE;
                   ReplaceDocumentDate := FALSE;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             FRA=Options] }

      { 1   ;2   ;Field     ;
                  Name=PostingDate;
                  CaptionML=[ENU=Posting Date;
                             FRA=Date comptabilisation];
                  SourceExpr=PostingDateReq }

      { 2   ;2   ;Field     ;
                  Name=ReplacePostingDate;
                  CaptionML=[ENU=Replace Posting Date;
                             FRA=Remplacer date comptabilisation];
                  SourceExpr=ReplacePostingDate;
                  OnValidate=BEGIN
                               IF ReplacePostingDate THEN
                                 MESSAGE(Text003);
                             END;
                              }

      { 3   ;2   ;Field     ;
                  CaptionML=[ENU=Replace Document Date;
                             FRA=Remplacer date document];
                  SourceExpr=ReplaceDocumentDate }

      { 5   ;2   ;Field     ;
                  CaptionML=[ENU=Calc. Inv. Discount;
                             FRA=Calculer remise facture];
                  SourceExpr=CalcInvDisc;
                  OnValidate=BEGIN
                               SalesSetup.GET;
                               SalesSetup.TESTFIELD("Calc. Inv. Discount",FALSE);
                             END;
                              }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Enter the posting date.;FRA=Entrez une date comptabilisation.';
      Text001@1001 : TextConst 'ENU=Posting invoices   #1########## @2@@@@@@@@@@@@@;FRA=Validation des factures   #1########## @2@@@@@@@@@@@@@';
      Text002@1002 : TextConst 'ENU=%1 invoices out of a total of %2 have now been posted.;FRA=%1 facture(s) sur %2 enregistr‚e(s).';
      Text003@1003 : TextConst 'ENU=The exchange rate associated with the new posting date on the sales header will not apply to the sales lines.;FRA=Le taux de change associ‚ … la nouvelle date de comptabilisation de l''en-tˆte vente ne s''appliquera pas aux lignes vente.';
      SalesLine@1005 : Record 37;
      SalesSetup@1006 : Record 311;
      ApprovalTemplate@1004 : Record 464;
      SalesCalcDisc@1007 : Codeunit 60;
      SalesPost@1008 : Codeunit 80;
      Window@1009 : Dialog;
      PostingDateReq@1010 : Date;
      CounterTotal@1011 : Integer;
      Counter@1012 : Integer;
      CounterOK@1013 : Integer;
      ReplacePostingDate@1014 : Boolean;
      ReplaceDocumentDate@1015 : Boolean;
      CalcInvDisc@1016 : Boolean;

    PROCEDURE CalculateInvoiceDiscount@1();
    BEGIN
      SalesLine.RESET;
      SalesLine.SETRANGE("Document Type","Sales Header"."Document Type");
      SalesLine.SETRANGE("Document No.","Sales Header"."No.");
      IF SalesLine.FINDFIRST THEN
        IF SalesCalcDisc.RUN(SalesLine) THEN BEGIN
          "Sales Header".GET("Sales Header"."Document Type","Sales Header"."No.");
          COMMIT;
        END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

